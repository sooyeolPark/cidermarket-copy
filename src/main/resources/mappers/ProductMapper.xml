<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProductMapper">

	<!-- Beans의 멤버변수(property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
	<resultMap type="study.shop.cidermarket.model.Product" id="productMap">
		<result property="prodno" column="prodno" />
		<result property="cateno" column="cateno" />
		<result property="subject" column="subject" />
		<result property="price" column="price" />
		<result property="fee" column="fee" />
		<result property="detail" column="detail" />
		<result property="regdate" column="regdate" />
		<result property="prodcon" column="prodcon" />
		<result property="how" column="how" />
		<result property="tradecon" column="tradecon" />
		<result property="seller" column="seller" />
		<result property="hits" column="hits" />
		<result property="editdate" column="editdate" />
		<result property="filepath" column="filepath" />
		<result property="thumbnailPath" column="thumbnailPath" />
		<result property="sellerNick" column="sellerNick" />
		<result property="catename" column="catename" />
	</resultMap>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, p.cateno, c.name as catename, subject, price, fee, detail,
			DATE_FORMAT(regdate, '%Y-%m-%d %H:%i:%S') AS regdate, 
			prodcon, how, tradecon,	seller, hits, 
			DATE_FORMAT(editdate, '%Y-%m-%d %H:%i:%S') AS editdate,
			(SELECT filepath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS filepath,
			(SELECT thumbnailPath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS thumbnailPath
		FROM product p
		INNER JOIN category c ON c.cateno=p.cateno
		WHERE prodno=#{prodno}
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, p.cateno, c.name AS catename, subject, price, fee, detail,
			DATE_FORMAT(regdate, '%Y-%m-%d %H:%i:%S') AS regdate, 
			prodcon, how, tradecon, hits, seller,
			(SELECT nickname FROM member WHERE membno=seller) AS sellerNick,  
			DATE_FORMAT(editdate, '%Y-%m-%d %H:%i:%S') AS editdate,
			(SELECT filepath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS filepath,
			(SELECT thumbnailPath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS thumbnailPath
		FROM product p 
		INNER JOIN category c ON c.cateno=p.cateno
		<where>
				tradecon='J'
			<if test="subject != null and subject != ''">
				AND ((subject LIKE concat('%', #{subject}, '%') OR 
				seller=(SELECT membno FROM member WHERE membno=seller AND nickname LIKE concat('%', #{subject}, '%'))
				OR prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%'))))
			</if>			
		</where>
		
			ORDER BY regdate DESC
		<if test="sort == 'priceAsc'">
			ORDER BY price ASC
		</if>
		<if test="sort == 'priceDesc'">
			ORDER BY price DESC
		</if>
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>	
	
	<!-- 데이터 수 조회를 위한 기능 정의 -->
	<select id="selectCountAll"
		parameterType="study.shop.cidermarket.model.Product"
		resultType="int">
		SELECT COUNT(*) FROM product
		
		<where>
				tradecon='J'
			<if test="cateno != 0 and cateno != null and cateno != ''">
				AND cateno = #{cateno}
			</if>
			<if test="subject != null and subject != ''">
				AND ((subject LIKE concat('%', #{subject}, '%') OR 
				seller=(SELECT membno FROM member WHERE membno=seller AND nickname LIKE concat('%', #{subject}, '%'))
				OR prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%'))))
			</if>
		</where>
	</select>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="study.shop.cidermarket.model.Product"
		useGeneratedKeys="true" keyProperty="prodno">
		INSERT INTO product (
			prodno, cateno, subject, price, fee, detail, regdate, 
			prodcon, how, tradecon, seller, hits, editdate
		) VALUES (
			#{prodno}, #{cateno}, #{subject}, #{price}, #{fee}, 
			#{detail}, now(), #{prodcon}, #{how}, "J",
			#{seller}, 0, now()
		)
	</insert>
	
	<!-- 데이터 삭제를 위한 기능 정의 (최종 상품 삭제(거래완료 전일 때까지만 삭제 가능)) -->
	<delete id="deleteItem"
		parameterType="study.shop.cidermarket.model.Product">
		DELETE FROM product WHERE prodno = #{prodno} AND tradecon in ('J', 'S')
	</delete>
	
	<!-- 멤버 탈퇴시 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItemByMembno"
		parameterType="study.shop.cidermarket.model.Product">
		DELETE FROM product WHERE seller=#{seller} AND tradecon IN ('J', 'S', 'X')
	</delete>
	
	<!-- 멤버 탈퇴 시 대표 더미데이터 입력 위한 기능 정의 -->
	<update id="updateItemByMembno"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			seller=999
		WHERE seller=#{seller} AND tradecon='W'
	</update>
	
	<!-- 멤버 탈퇴 시 해당 멤버의 상품조회를 위한 기능 정의 -->
	<select id="selectOutList"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, tradecon, seller
		FROM product
		WHERE seller=#{seller}
	</select>	
	
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			cateno=#{cateno}, subject=#{subject}, price=#{price}, fee=#{fee}, 
			detail=#{detail}, prodcon=#{prodcon}, how=#{how}, editdate=now()
		WHERE prodno=#{prodno}
	</update>
	
	<!-- 주문 완료했을때 판매 완료로 바꿔주는 기능 위한 기능 정의 -->
	<update id="orderOkItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			 tradecon= 'W'
		WHERE prodno=#{prodno}
	</update>

	<!-- 특정 회원이 올린 데이터 수 조회를 위한 기능 정의 ::::::: 판매상품 or 숨긴상품 -->
	<select id="selectCountMemberItems"
		parameterType="study.shop.cidermarket.model.Product"
		resultType="int">
		SELECT COUNT(*) FROM product
		 
		<where>
				seller = #{seller} AND tradecon = #{tradecon}
			<if test="subject != null and subject != ''">
				AND (subject LIKE concat('%', #{subject}, '%')
				OR prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%')))
			</if>
		</where>
	</select>

	<!-- 특정 회원이 올린 데이터 수 조회를 위한 기능 정의 ::::::: 찜상품 -->
	<select id="selectCountMemberItemsMP"
		parameterType="study.shop.cidermarket.model.Product"
		resultType="int">
		SELECT COUNT(*) 
		FROM membprod mp
		INNER JOIN product p ON mp.prodno=p.prodno
		
		<where>
				membno = #{seller}
			<if test="subject != null and subject != ''">
				AND (p.subject LIKE concat('%', #{subject}, '%') OR 
				p.seller=(SELECT membno FROM member WHERE membno=seller AND nickname LIKE concat('%', #{subject}, '%'))
				OR p.prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%')))
			</if>
		</where>
	</select>
	
	<!-- 특정 회원이 올린 다중행 조회를 위한 기능 정의 ::::::: 판매상품 or 숨긴상품 -->
	<select id="selectMemberList"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, cateno, subject, price, fee, detail,
			DATE_FORMAT(regdate, '%Y-%m-%d %H:%i:%S') AS regdate, 
			prodcon, how, tradecon, hits, seller,
			(SELECT nickname FROM member WHERE membno=seller) AS sellerNick,  
			DATE_FORMAT(editdate, '%Y-%m-%d %H:%i:%S') AS editdate,
			(SELECT filepath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS filepath,
			(SELECT thumbnailPath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS thumbnailPath
		FROM product
		
		<where>
				seller = #{seller} AND tradecon = #{tradecon}
			<if test="subject != null and subject != ''">
				AND (subject LIKE concat('%', #{subject}, '%')
				OR prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%')))
			</if>
		</where>
		
		ORDER BY prodno DESC
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 특정 회원이 올린 다중행 조회를 위한 기능 정의 ::::::: 찜상품 -->
	<select id="selectMemberListMP"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, cateno, subject, price, fee, detail,
			DATE_FORMAT(regdate, '%Y-%m-%d %H:%i:%S') AS regdate, 
			prodcon, how, tradecon, hits, seller,
			(SELECT nickname FROM member WHERE membno=seller) AS sellerNick,  
			DATE_FORMAT(editdate, '%Y-%m-%d %H:%i:%S') AS editdate,
			(SELECT filepath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS filepath,
			(SELECT thumbnailPath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS thumbnailPath
		FROM product
		
		<where>
				prodno IN (SELECT prodno FROM membprod WHERE membno = #{seller})
			<if test="subject != null and subject != ''">
				AND (subject LIKE concat('%', #{subject}, '%') OR 
				seller=(SELECT membno FROM member WHERE membno=seller AND nickname LIKE concat('%', #{subject}, '%'))
				OR prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%')))
			</if>
		</where>
		
		ORDER BY prodno DESC
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>	
	
	<!-- 신고게시판에서 관리자가 상품의 판매 재개/정지 기능 -->
	<update id="singoUpdateItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			 tradecon= #{tradecon}
		WHERE prodno=#{prodno}
	</update>
	
	<!-- 관리자 상품진열(카테고리) 수정 기능 -->
	<update id="categoryUpdateItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			 cateno= #{cateno}
		WHERE prodno=#{prodno}
	</update>
	
	<!-- 관리자 상품진열(카테고리) 최신순/가나다순 정렬 -->
	<select id="selectCategoryList"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, p.cateno, c.name AS catename, subject,
			(SELECT nickname FROM member WHERE membno=seller) AS sellerNick, 
			DATE_FORMAT(regdate, '%Y-%m-%d %H:%i:%S') AS regdate
		FROM product p 
		INNER JOIN category c ON c.cateno=p.cateno
		
		<where>
			<if test="cateno != 0">
				p.cateno = #{cateno}
			</if>
			<if test="subject != null and subject != ''">
				AND (subject LIKE concat('%', #{subject}, '%') OR 
				seller=(SELECT membno FROM member WHERE membno=seller AND nickname LIKE concat('%', #{subject}, '%'))
				OR prodno in (SELECT DISTINCT prodno FROM hashtag WHERE tagname LIKE concat('%', #{subject}, '%')))
			</if>
		</where>
		
		<if test="nickname == 'regdate'">
			ORDER BY regdate DESC
		</if>
		<if test="nickname == 'subject'">
			ORDER BY subject ASC
		</if>
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>
	
	<!-- 알람 조회를 위한 상품명 조회 -->
	<select id="selectAlarmItem"
		parameterType="study.shop.cidermarket.model.Product"
		resultMap="productMap">
		SELECT prodno, subject, seller
		FROM product
		WHERE prodno=#{prodno}		
	</select>
	
	<select id="selectListByFilter"
      parameterType="study.shop.cidermarket.model.Product"
      resultMap="productMap">
      SELECT 
         subject, price, p.prodno, c.cateno, c.name as catename, prodcon, how, tradecon, hits, seller,
		 (SELECT nickname FROM member WHERE membno=seller) AS sellerNick,
         (SELECT filepath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=p.prodno AND reftable='product' order by fname asc limit 0, 1)) AS filepath,
         (SELECT thumbnailPath FROM files WHERE fileno=(SELECT fileno FROM files WHERE refid=prodno AND reftable='product' order by fname asc limit 0, 1)) AS thumbnailPath
      FROM product p,category c
      
      <where>
      	c.cateno=p.cateno and tradecon="J"	      	      	      	
      </where>

      ORDER BY regdate Desc
      
      <if test="listCount > 0">
         LIMIT #{offset}, #{listCount}
      </if>
      
   </select> 
   
   	<select id="selectCountFilter"
		parameterType="study.shop.cidermarket.model.Product"
		resultType="int">
		SELECT COUNT(*) 
	    FROM product p,category c
		
		<where>
      		c.cateno=p.cateno and tradecon="J"
      	</where>
		ORDER BY regdate Desc
      
      <if test="listCount > 0">
         LIMIT #{offset}, #{listCount}
      </if>
		

	</select>
	
	<!-- 주문 완료했을때 판매 완료로 바꿔주는 기능 위한 기능 정의 -->
	<update id="updateCategoryItem"
		parameterType="study.shop.cidermarket.model.Product">
		UPDATE product SET
			 cateno= 47
		WHERE cateno=#{cateno}
	</update>
	

</mapper>